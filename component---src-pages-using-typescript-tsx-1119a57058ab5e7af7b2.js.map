{"version":3,"file":"component---src-pages-using-typescript-tsx-1119a57058ab5e7af7b2.js","mappings":"2NAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECRX,MA/BeT,IAAA,IAAC,UAAEU,GAAWV,EAAA,OAC3BH,EAAAA,cAAA,UACEc,MAAO,CACLC,OAAO,SACPC,QAAQ,OACRC,QAAQ,OACRC,WAAW,SACXC,eAAgB,kBAIlBnB,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAG,IACHE,MAAO,CACLM,UAAU,OACVC,eAAe,SAElB,sBAGDrB,EAAAA,cAAA,OAAKsB,UAAU,SACftB,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,KAAK,QACfZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,cAAc,aACxBZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,UAAU,SACpBZ,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAI,YAAY,YAIf,ECGX,MApBeT,IAAmB,IAADoB,EAAA,IAAjB,SAAEC,GAAUrB,EAC1B,MAAMC,GAAOqB,EAAAA,EAAAA,gBAAe,cAU5B,OACEzB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0B,EAAM,CAACb,WAAiC,QAAtBU,EAAAnB,EAAKI,KAAKmB,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBrB,QAAK,UAE9CF,EAAAA,cAAA,YAAOwB,GACR,C,+CCcP,IAlCA,SAAYrB,GAAoC,IAADyB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAE5B,EAAK,SAAEsB,GAAUrB,EAC3C,MAAM,KAAEK,IAASiB,EAAAA,EAAAA,gBAAe,YAc1BM,EAAkBD,GAAetB,EAAKmB,aAAaG,YACnDE,EAAgC,QAApBJ,EAAGpB,EAAKmB,oBAAY,IAAAC,OAAA,EAAjBA,EAAmB1B,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQgC,EAAkB9B,EAAK,MAAM8B,EAAiB9B,GACtDF,EAAAA,cAAA,QAAMiC,KAAK,cAAcC,QAASH,IAClC/B,EAAAA,cAAA,QAAMmC,SAAS,WAAWD,QAAShC,IACnCF,EAAAA,cAAA,QAAMmC,SAAS,iBAAiBD,QAASH,IACzC/B,EAAAA,cAAA,QAAMmC,SAAS,UAAUD,QAAQ,YACjClC,EAAAA,cAAA,QAAMiC,KAAK,eAAeC,QAAQ,YAClClC,EAAAA,cAAA,QAAMiC,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAArB,EAAKmB,oBAAY,IAAAE,OAAA,EAAjBA,EAAmBO,SAAM,KAC/DpC,EAAAA,cAAA,QAAMiC,KAAK,gBAAgBC,QAAShC,IACpCF,EAAAA,cAAA,QAAMiC,KAAK,sBAAsBC,QAASH,IACzCP,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `24px`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: 'space-between',\n    }}\n  >\n\n    <Link\n      to=\"/\"\n      style={{\n        textAlign: `left`,\n        textDecoration: `none`,\n      }}\n    >pushing positivity</Link>\n    \n    \n    <div className=\"links\">\n    <Link to={\"/\"}>Home</Link>\n    <Link to={\"/portfolio\"}>Portfolio</Link>\n    <Link to={\"/about\"}>About</Link>\n    <Link to={\"/contact\"}>Contact</Link>\n\n    </div>\n\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n//import \"../styles/layout.css\"\nimport \"../styles/global.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      \n        <main>{children}</main>  \n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","style","margin","padding","display","alignItems","justifyContent","textAlign","textDecoration","className","_data$site$siteMetada","children","useStaticQuery","Header","siteMetadata","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}